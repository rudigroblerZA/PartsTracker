services:
  partstracker.webapi:
    image: rudigrobler/partstrackerwebapi
    build:
      context: src/PartsTracker.WebApi
      dockerfile: Dockerfile  
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
    ports:
      - "0.0.0.0:8080:8080"
    depends_on:
        postgres:
          condition: service_healthy
      
  partstracker.ui:
    image: rudigrobler/partstrackerui
    build:
      context: src/PartsTracker.UI/partstracker.ui
      dockerfile: Dockerfile  
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8081
    ports:
      - "0.0.0.0:8081:8081"

  postgres:    
    image: postgres:16
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: partsuser
      POSTGRES_PASSWORD: supersecret
      POSTGRES_DB: InventoryDb
    ports:
      - "0.0.0.0:5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
        test: ["CMD-SHELL", "pg_isready -U partsuser"]
        interval: 10s
        timeout: 5s
        retries: 5

  adminer:
    image: adminer
    restart: always
    ports:
      - "0.0.0.0:5000:8080"

volumes:
  pgdata: