À6
FC:\Users\rudig\Desktop\PartsTracker\src\PartsTracker.WebApi\Program.cs
	namespace 	
PartsTracker
 
. 
WebApi 
; 
public		 
class		 
Program		 
{

 
public 

static 
async 
Task 
Main !
(! "
string" (
[( )
]) *
args+ /
)/ 0
{ 
var 
builder 
= 
WebApplication $
.$ %
CreateBuilder% 2
(2 3
args3 7
)7 8
;8 9
builder 
. 
Services 
. 
AddCors  
(  !
builder! (
=>) +
{ 	
builder 
. 
	AddPolicy 
( 
$str /
,/ 0
policy 
=> 
policy  
.  !
AllowAnyOrigin! /
(/ 0
)0 1
.  !
AllowAnyMethod! /
(/ 0
)0 1
.  !
AllowAnyHeader! /
(/ 0
)0 1
)1 2
;2 3
} 	
)	 

;
 
builder 
. 
Services 
. 
AddControllers '
(' (
)( )
;) *
builder 
. 
Services 
. #
AddEndpointsApiExplorer 0
(0 1
)1 2
;2 3
builder 
. 
Services 
. 
AddSwaggerGen &
(& '
c' (
=>) +
{ 	
c 
. 

SwaggerDoc 
( 
$str 
, 
new "
(" #
)# $
{ 
Version 
= 
$str 
, 
Title   
=   
$str   &
,  & '
Description!! 
=!! 
$str	!! Ó
}"" 
)"" 
;"" 
var$$ 
xmlPath$$ 
=$$ 
Path$$ 
.$$ 
Combine$$ &
($$& '

AppContext$$' 1
.$$1 2
BaseDirectory$$2 ?
,$$? @
$str$$A Z
)$$Z [
;$$[ \
if%% 
(%% 
File%% 
.%% 
Exists%% 
(%% 
xmlPath%% #
)%%# $
)%%$ %
{&& 
c'' 
.'' 
IncludeXmlComments'' $
(''$ %
xmlPath''% ,
)'', -
;''- .
}(( 
})) 	
)))	 

;))
 
builder++ 
.++ 
Services++ 
.++ 
AddDbContextPool++ )
<++) *
InventoryDbContext++* <
>++< =
(++= >
options++> E
=>++F H
options++I P
.++P Q
	UseNpgsql++Q Z
(++Z [
builder++[ b
.++b c
Configuration++c p
.++p q 
GetConnectionString	++q Ñ
(
++Ñ Ö
$str
++Ö ô
)
++ô ö
)
++ö õ
)
++õ ú
;
++ú ù
builder-- 
.-- 
Services-- 
.-- 
AddHealthChecks-- (
(--( )
)--) *
.--* +
AddDbContextCheck--+ <
<--< =
InventoryDbContext--= O
>--O P
(--P Q
)--Q R
;--R S
builder// 
.// 
Services// 
.// 
	AddScoped// "
<//" #
IPartsRepository//# 3
,//3 4
PartsRepository//5 D
>//D E
(//E F
)//F G
;//G H
var11 
app11 
=11 
builder11 
.11 
Build11 
(11  
)11  !
;11! "
app33 
.33 
MapHealthChecks33 
(33 
$str33 %
)33% &
;33& '
app55 
.55 
UseCors55 
(55 
$str55 %
)55% &
;55& '
app77 
.77 
UseDefaultFiles77 
(77 
)77 
;77 
app88 
.88 
UseStaticFiles88 
(88 
)88 
;88 
if:: 

(:: 
app:: 
.:: 
Environment:: 
.:: 
IsDevelopment:: )
(::) *
)::* +
)::+ ,
{;; 	
app<< 
.<< 

UseSwagger<< 
(<< 
)<< 
;<< 
app== 
.== 
UseSwaggerUI== 
(== 
c== 
=>== !
{>> 
c?? 
.?? 
SwaggerEndpoint?? !
(??! "
$str??" <
,??< =
$str??> S
)??S T
;??T U
c@@ 
.@@ 
RoutePrefix@@ 
=@@ 
string@@  &
.@@& '
Empty@@' ,
;@@, -
}AA 
)AA 
;AA 
}BB 	
tryDD 
{EE 	
usingFF 
varFF 
scopeFF 
=FF 
appFF !
.FF! "
ServicesFF" *
.FF* +
CreateScopeFF+ 6
(FF6 7
)FF7 8
;FF8 9
varGG 
dbGG 
=GG 
scopeGG 
.GG 
ServiceProviderGG *
.GG* +
GetRequiredServiceGG+ =
<GG= >
InventoryDbContextGG> P
>GGP Q
(GGQ R
)GGR S
;GGS T
dbHH 
.HH 
DatabaseHH 
.HH 
MigrateHH 
(HH  
)HH  !
;HH! "
awaitII 
DbInitializerII 
.II  
	SeedAsyncII  )
(II) *
dbII* ,
)II, -
;II- .
}JJ 	
catchKK 
(KK 
	ExceptionKK 
exKK 
)KK 
{LL 	
varMM 
loggerMM 
=MM 
appMM 
.MM 
ServicesMM %
.MM% &
GetRequiredServiceMM& 8
<MM8 9
ILoggerMM9 @
<MM@ A
ProgramMMA H
>MMH I
>MMI J
(MMJ K
)MMK L
;MML M
loggerNN 
.NN 
LogErrorNN 
(NN 
exNN 
,NN 
$strNN  P
)NNP Q
;NNQ R
throwOO 
;OO 
}PP 	
appTT 
.TT 
UseAuthorizationTT 
(TT 
)TT 
;TT 
appVV 
.VV 
MapControllersVV 
(VV 
)VV 
;VV 
appXX 
.XX 
MapFallbackToFileXX 
(XX 
$strXX +
)XX+ ,
;XX, -
appZZ 
.ZZ 
RunZZ 
(ZZ 
)ZZ 
;ZZ 
}[[ 
}\\ ã
JC:\Users\rudig\Desktop\PartsTracker\src\PartsTracker.WebApi\Models\Part.cs
	namespace 	
PartsTracker
 
. 
WebApi 
. 
Models $
;$ %
public 
class 
Part 
{		 
[ 
Key 
] 	
[ 
Required 
] 
[ 
	MaxLength 
( 
$num 
) 
] 
public 

string 

PartNumber 
{ 
get "
;" #
set$ '
;' (
}) *
=+ ,
string- 3
.3 4
Empty4 9
;9 :
[ 
	MaxLength 
( 
$num 
) 
] 
public 

string 
? 
Description 
{  
get! $
;$ %
set& )
;) *
}+ ,
[ 
Range 

(
 
$num 
, 
int 
. 
MaxValue 
, 
ErrorMessage (
=) *
$str+ Q
)Q R
]R S
public 

int 
QuantityOnHand 
{ 
get  #
;# $
set% (
;( )
}* +
[!! 
	MaxLength!! 
(!! 
$num!! 
)!! 
]!! 
public"" 

string"" 
?"" 
LocationCode"" 
{""  !
get""" %
;""% &
set""' *
;""* +
}"", -
public'' 

DateTime'' 
LastStockTake'' !
{''" #
get''$ '
;''' (
set'') ,
;'', -
}''. /
=''0 1
DateTime''2 :
.'': ;
UtcNow''; A
;''A B
})) •
fC:\Users\rudig\Desktop\PartsTracker\src\PartsTracker.WebApi\Migrations\20250704211531_InitialCreate.cs
	namespace 	
PartsTracker
 
. 
WebApi 
. 

Migrations (
{ 
public		 

partial		 
class		 
InitialCreate		 &
:		' (
	Migration		) 2
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str 
, 
columns 
: 
table 
=> !
new" %
{ 

PartNumber 
=  
table! &
.& '
Column' -
<- .
string. 4
>4 5
(5 6
type6 :
:: ;
$str< S
,S T
	maxLengthU ^
:^ _
$num` b
,b c
nullabled l
:l m
falsen s
)s t
,t u
Description 
=  !
table" '
.' (
Column( .
<. /
string/ 5
>5 6
(6 7
type7 ;
:; <
$str= U
,U V
	maxLengthW `
:` a
$numb e
,e f
nullableg o
:o p
trueq u
)u v
,v w
QuantityOnHand "
=# $
table% *
.* +
Column+ 1
<1 2
int2 5
>5 6
(6 7
type7 ;
:; <
$str= F
,F G
nullableH P
:P Q
falseR W
)W X
,X Y
LocationCode  
=! "
table# (
.( )
Column) /
</ 0
string0 6
>6 7
(7 8
type8 <
:< =
$str> U
,U V
	maxLengthW `
:` a
$numb d
,d e
nullablef n
:n o
truep t
)t u
,u v
LastStockTake !
=" #
table$ )
.) *
Column* 0
<0 1
DateTime1 9
>9 :
(: ;
type; ?
:? @
$strA [
,[ \
nullable] e
:e f
falseg l
)l m
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% /
,/ 0
x1 2
=>3 5
x6 7
.7 8

PartNumber8 B
)B C
;C D
} 
) 
; 
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{   	
migrationBuilder!! 
.!! 
	DropTable!! &
(!!& '
name"" 
:"" 
$str"" 
)"" 
;"" 
}## 	
}$$ 
}%% ˝*
]C:\Users\rudig\Desktop\PartsTracker\src\PartsTracker.WebApi\Infrastricture\PartsRepository.cs
	namespace 	
PartsTracker
 
. 
WebApi 
. 
Infrastricture ,
;, -
public 
class 
PartsRepository 
: 
IPartsRepository /
{ 
private 
readonly 
InventoryDbContext '
_context( 0
;0 1
public 

PartsRepository 
( 
InventoryDbContext -
context. 5
)5 6
{ 
_context 
= 
context 
; 
} 
public 

async 
Task 
< 
Part 
? 
> 
GetByIdAsync )
() *
params* 0
object1 7
[7 8
]8 9
	keyValues: C
)C D
{ 
if 

( 
	keyValues 
is 
null 
||  
	keyValues! *
.* +
Length+ 1
==2 4
$num5 6
)6 7
throw   
new   
ArgumentException   '
(  ' (
$str  ( R
,  R S
nameof  T Z
(  Z [
	keyValues  [ d
)  d e
)  e f
;  f g
return"" 
await"" 
_context"" 
."" 
Parts"" #
.""# $
	FindAsync""$ -
(""- .
	keyValues"". 7
)""7 8
;""8 9
}## 
public** 

async** 
Task** 
<** 
IEnumerable** !
<**! "
Part**" &
>**& '
>**' (
GetAllAsync**) 4
(**4 5
CancellationToken**5 F
cancellationToken**G X
=**Y Z
default**[ b
)**b c
=>**d f
await**g l
_context**m u
.**u v
Parts**v {
.**{ |
ToListAsync	**| á
(
**á à
cancellationToken
**à ô
)
**ô ö
;
**ö õ
public22 

async22 
Task22 
<22 
IEnumerable22 !
<22! "
Part22" &
>22& '
>22' (
	FindAsync22) 2
(222 3

Expression223 =
<22= >
Func22> B
<22B C
Part22C G
,22G H
bool22I M
>22M N
>22N O
	predicate22P Y
,22Y Z
CancellationToken22[ l
cancellationToken22m ~
=	22 Ä
default
22Å à
)
22à â
=>
22ä å
await
22ç í
_context
22ì õ
.
22õ ú
Parts
22ú °
.
22° ¢
Where
22¢ ß
(
22ß ®
	predicate
22® ±
)
22± ≤
.
22≤ ≥
ToListAsync
22≥ æ
(
22æ ø
cancellationToken
22ø –
)
22– —
;
22— “
public88 

async88 
Task88 
AddAsync88 
(88 
Part88 #
entity88$ *
)88* +
=>88, .
await88/ 4
_context885 =
.88= >
Parts88> C
.88C D
AddAsync88D L
(88L M
entity88M S
)88S T
;88T U
public>> 

void>> 
Update>> 
(>> 
Part>> 
entity>> "
)>>" #
=>>>$ &
_context>>' /
.>>/ 0
Parts>>0 5
.>>5 6
Update>>6 <
(>>< =
entity>>= C
)>>C D
;>>D E
publicDD 

voidDD 
RemoveDD 
(DD 
PartDD 
entityDD "
)DD" #
=>DD$ &
_contextDD' /
.DD/ 0
PartsDD0 5
.DD5 6
RemoveDD6 <
(DD< =
entityDD= C
)DDC D
;DDD E
publicKK 


IQueryableKK 
<KK 
PartKK 
>KK 
QueryKK !
(KK! "
boolKK" &
trackingKK' /
=KK0 1
trueKK2 6
)KK6 7
=>KK8 :
trackingKK; C
?KKD E
_contextKKF N
.KKN O
PartsKKO T
:KKU V
_contextKKW _
.KK_ `
PartsKK` e
.KKe f
AsNoTrackingKKf r
(KKr s
)KKs t
;KKt u
publicQQ 

asyncQQ 
TaskQQ 
AddRangeAsyncQQ #
(QQ# $
IEnumerableQQ$ /
<QQ/ 0
PartQQ0 4
>QQ4 5
partsQQ6 ;
)QQ; <
=>QQ= ?
awaitQQ@ E
_contextQQF N
.QQN O
PartsQQO T
.QQT U
AddRangeAsyncQQU b
(QQb c
partsQQc h
)QQh i
;QQi j
publicWW 

voidWW 
RemoveRangeWW 
(WW 
IEnumerableWW '
<WW' (
PartWW( ,
>WW, -
partsWW. 3
)WW3 4
=>WW5 7
_contextWW8 @
.WW@ A
PartsWWA F
.WWF G
RemoveRangeWWG R
(WWR S
partsWWS X
)WWX Y
;WWY Z
public^^ 

async^^ 
Task^^ 
<^^ 
int^^ 
>^^ 
SaveChangesAsync^^ +
(^^+ ,
)^^, -
=>^^. 0
await^^1 6
_context^^7 ?
.^^? @
SaveChangesAsync^^@ P
(^^P Q
)^^Q R
;^^R S
}__ ‘
^C:\Users\rudig\Desktop\PartsTracker\src\PartsTracker.WebApi\Infrastricture\IPartsRepository.cs
	namespace 	
PartsTracker
 
. 
WebApi 
. 
Infrastricture ,
;, -
public		 
	interface		 
IPartsRepository		 !
{

 
Task 
AddAsync	 
( 
Part 
entity 
) 
; 
Task 
< 	
IEnumerable	 
< 
Part 
> 
> 
	FindAsync %
(% &

Expression& 0
<0 1
Func1 5
<5 6
Part6 :
,: ;
bool< @
>@ A
>A B
	predicateC L
,L M
CancellationTokenN _
cancellationToken` q
=r s
defaultt {
){ |
;| }
Task 
< 	
IEnumerable	 
< 
Part 
> 
> 
GetAllAsync '
(' (
CancellationToken( 9
cancellationToken: K
=L M
defaultN U
)U V
;V W
Task%% 
<%% 	
Part%%	 
?%% 
>%% 
GetByIdAsync%% 
(%% 
params%% #
object%%$ *
[%%* +
]%%+ ,
	keyValues%%- 6
)%%6 7
;%%7 8

IQueryable,, 
<,, 
Part,, 
>,, 
Query,, 
(,, 
bool,, 
tracking,,  (
),,( )
;,,) *
void22 
Remove22	 
(22 
Part22 
entity22 
)22 
;22 
Task88 
AddRangeAsync88	 
(88 
IEnumerable88 "
<88" #
Part88# '
>88' (
parts88) .
)88. /
;88/ 0
void>> 
RemoveRange>>	 
(>> 
IEnumerable>>  
<>>  !
Part>>! %
>>>% &
parts>>' ,
)>>, -
;>>- .
TaskDD 
<DD 	
intDD	 
>DD 
SaveChangesAsyncDD 
(DD 
)DD  
;DD  !
voidJJ 
UpdateJJ	 
(JJ 
PartJJ 
entityJJ 
)JJ 
;JJ 
}KK ≠	
VC:\Users\rudig\Desktop\PartsTracker\src\PartsTracker.WebApi\Data\InventoryDbContext.cs
	namespace 	
PartsTracker
 
. 
Server 
. 
Data "
;" #
public 
class 
InventoryDbContext 
:  !
	DbContext" +
{ 
public 

DbSet 
< 
Part 
> 
Parts 
{ 
get "
;" #
set$ '
;' (
}) *
public

 

InventoryDbContext

 
(

 
DbContextOptions

 .
<

. /
InventoryDbContext

/ A
>

A B
options

C J
)

J K
:

L M
base

N R
(

R S
options

S Z
)

Z [
{ 
} 
	protected 
override 
void 
OnModelCreating +
(+ ,
ModelBuilder, 8
modelBuilder9 E
)E F
{ 
baseGG 
.GG 
OnModelCreatingGG 
(GG 
modelBuilderGG )
)GG) *
;GG* +
}HH 
}II Ï
QC:\Users\rudig\Desktop\PartsTracker\src\PartsTracker.WebApi\Data\DbInitializer.cs
	namespace 	
PartsTracker
 
. 
WebApi 
. 
Data "
;" #
public		 
static		 
class		 
DbInitializer		 !
{

 
public 

static 
async 
Task 
	SeedAsync &
(& '
InventoryDbContext' 9
context: A
)A B
{ 
if 

( 
! 
context 
. 
Parts 
. 
Any 
( 
)  
)  !
{ 	
context 
. 
Parts 
. 
AddRange "
(" #
new# &
[& '
]' (
{ 
new 
Part 
{ 

PartNumber 
=  
$str! .
,. /
Description 
=  !
$str" B
,B C
QuantityOnHand "
=# $
$num% &
,& '
LocationCode  
=! "
$str# '
,' (
LastStockTake !
=" #
DateTime$ ,
., -
UtcNow- 3
,3 4
} 
, 
new 
Part 
{ 

PartNumber 
=  
$str! .
,. /
Description 
=  !
$str" I
,I J
QuantityOnHand   "
=  # $
$num  % &
,  & '
LocationCode!!  
=!!! "
$str!!# '
,!!' (
LastStockTake"" !
=""" #
DateTime""$ ,
."", -
UtcNow""- 3
,""3 4
}## 
,## 
new$$ 
Part$$ 
{%% 

PartNumber&& 
=&&  
$str&&! .
,&&. /
Description'' 
=''  !
$str''" X
,''X Y
QuantityOnHand(( "
=((# $
$num((% &
,((& '
LocationCode))  
=))! "
$str))# '
,))' (
LastStockTake** !
=**" #
DateTime**$ ,
.**, -
UtcNow**- 3
,**3 4
}++ 
},, 
),, 
;,, 
await.. 
context.. 
... 
SaveChangesAsync.. *
(..* +
)..+ ,
;.., -
}// 	
}00 
}11 ∂S
ZC:\Users\rudig\Desktop\PartsTracker\src\PartsTracker.WebApi\Controllers\PartsController.cs
	namespace 	
PartsTracker
 
. 
WebApi 
. 
Controllers )
;) *
[

 
ApiController

 
]

 
[ 
Route 
( 
$str 
) 
] 
public 
class 
PartsController 
: 
ControllerBase -
{ 
private 
readonly 
ILogger 
< 
PartsController ,
>, -
_logger. 5
;5 6
private 
readonly 
IPartsRepository %
_repository& 1
;1 2
public 

PartsController 
( 
IPartsRepository +

repository, 6
,6 7
ILogger8 ?
<? @
PartsController@ O
>O P
loggerQ W
)W X
{ 
_repository 
= 

repository  
;  !
_logger 
= 
logger 
; 
} 
[&& 
HttpGet&& 
]&& 
[''  
ProducesResponseType'' 
('' 
typeof''  
(''  !
IEnumerable''! ,
<'', -
Part''- 1
>''1 2
)''2 3
,''3 4
StatusCodes''5 @
.''@ A
Status200OK''A L
)''L M
]''M N
public(( 

async(( 
Task(( 
<(( 
ActionResult(( "
<((" #
IEnumerable((# .
<((. /
Part((/ 3
>((3 4
>((4 5
>((5 6
GetAll((7 =
(((= >
)((> ?
{)) 
var** 
parts** 
=** 
await** 
_repository** %
.**% &
GetAllAsync**& 1
(**1 2
)**2 3
;**3 4
return++ 
Ok++ 
(++ 
parts++ 
)++ 
;++ 
},, 
[88 
HttpGet88 
(88 
$str88 
)88 
]88 
[99  
ProducesResponseType99 
(99 
typeof99  
(99  !
Part99! %
)99% &
,99& '
StatusCodes99( 3
.993 4
Status200OK994 ?
)99? @
]99@ A
[::  
ProducesResponseType:: 
(:: 
StatusCodes:: %
.::% &
Status404NotFound::& 7
)::7 8
]::8 9
public;; 

async;; 
Task;; 
<;; 
ActionResult;; "
<;;" #
Part;;# '
>;;' (
>;;( )
Get;;* -
(;;- .
string;;. 4

partNumber;;5 ?
);;? @
{<< 
var== 
part== 
=== 
await== 
_repository== $
.==$ %
GetByIdAsync==% 1
(==1 2

partNumber==2 <
)==< =
;=== >
if>> 

(>> 
part>> 
==>> 
null>> 
)>> 
{?? 	
_logger@@ 
.@@ 

LogWarning@@ 
(@@ 
$str@@ =
,@@= >

partNumber@@? I
)@@I J
;@@J K
returnAA 
NotFoundAA 
(AA 
)AA 
;AA 
}BB 	
returnDD 
OkDD 
(DD 
partDD 
)DD 
;DD 
}EE 
[QQ 
HttpPostQQ 
]QQ 
[RR  
ProducesResponseTypeRR 
(RR 
StatusCodesRR %
.RR% &
Status201CreatedRR& 6
)RR6 7
]RR7 8
[SS  
ProducesResponseTypeSS 
(SS 
StatusCodesSS %
.SS% &
Status409ConflictSS& 7
)SS7 8
]SS8 9
publicTT 

asyncTT 
TaskTT 
<TT 
ActionResultTT "
<TT" #
PartTT# '
>TT' (
>TT( )
CreateTT* 0
(TT0 1
PartTT1 5
partTT6 :
)TT: ;
{UU 
ifVV 

(VV 
awaitVV 
_repositoryVV 
.VV 
GetByIdAsyncVV *
(VV* +
partVV+ /
.VV/ 0

PartNumberVV0 :
)VV: ;
isVV< >
notVV? B
nullVVC G
)VVG H
returnWW 
ConflictWW 
(WW 
$"WW 
$strWW /
{WW/ 0
partWW0 4
.WW4 5

PartNumberWW5 ?
}WW? @
$strWW@ P
"WWP Q
)WWQ R
;WWR S
_loggerYY 
.YY 
LogInformationYY 
(YY 
$strYY <
,YY< =
partYY> B
.YYB C

PartNumberYYC M
)YYM N
;YYN O
part[[ 
.[[ 
LastStockTake[[ 
=[[ 
DateTime[[ %
.[[% &
UtcNow[[& ,
;[[, -
await]] 
_repository]] 
.]] 
AddAsync]] "
(]]" #
part]]# '
)]]' (
;]]( )
await^^ 
_repository^^ 
.^^ 
SaveChangesAsync^^ *
(^^* +
)^^+ ,
;^^, -
return`` 
CreatedAtAction`` 
(`` 
nameof`` %
(``% &
Get``& )
)``) *
,``* +
new``, /
{``0 1

partNumber``2 <
=``= >
part``? C
.``C D

PartNumber``D N
}``O P
,``P Q
part``R V
)``V W
;``W X
}aa 
[pp 
HttpPutpp 
(pp 
$strpp 
)pp 
]pp 
[qq  
ProducesResponseTypeqq 
(qq 
StatusCodesqq %
.qq% &
Status204NoContentqq& 8
)qq8 9
]qq9 :
[rr  
ProducesResponseTyperr 
(rr 
StatusCodesrr %
.rr% &
Status400BadRequestrr& 9
)rr9 :
]rr: ;
[ss  
ProducesResponseTypess 
(ss 
StatusCodesss %
.ss% &
Status404NotFoundss& 7
)ss7 8
]ss8 9
publictt 

asynctt 
Tasktt 
<tt 
IActionResulttt #
>tt# $
Updatett% +
(tt+ ,
stringtt, 2

partNumbertt3 =
,tt= >
Parttt? C
partttD H
)ttH I
{uu 
ifvv 

(vv 

partNumbervv 
!=vv 
partvv 
.vv 

PartNumbervv )
)vv) *
returnww 

BadRequestww 
(ww 
$strww O
)wwO P
;wwP Q
varyy 
existingyy 
=yy 
awaityy 
_repositoryyy (
.yy( )
GetByIdAsyncyy) 5
(yy5 6

partNumberyy6 @
)yy@ A
;yyA B
ifzz 

(zz 
existingzz 
iszz 
nullzz 
)zz 
{{{ 	
_logger|| 
.|| 

LogWarning|| 
(|| 
$str|| =
,||= >

partNumber||? I
)||I J
;||J K
return}} 
NotFound}} 
(}} 
)}} 
;}} 
}~~ 	
_logger
ÅÅ 
.
ÅÅ 
LogInformation
ÅÅ 
(
ÅÅ 
$str
ÅÅ <
,
ÅÅ< =

partNumber
ÅÅ> H
)
ÅÅH I
;
ÅÅI J
existing
ÇÇ 
.
ÇÇ 
Description
ÇÇ 
=
ÇÇ 
part
ÇÇ #
.
ÇÇ# $
Description
ÇÇ$ /
;
ÇÇ/ 0
existing
ÉÉ 
.
ÉÉ 
QuantityOnHand
ÉÉ 
=
ÉÉ  !
part
ÉÉ" &
.
ÉÉ& '
QuantityOnHand
ÉÉ' 5
;
ÉÉ5 6
existing
ÑÑ 
.
ÑÑ 
LocationCode
ÑÑ 
=
ÑÑ 
part
ÑÑ  $
.
ÑÑ$ %
LocationCode
ÑÑ% 1
;
ÑÑ1 2
existing
ÖÖ 
.
ÖÖ 
LastStockTake
ÖÖ 
=
ÖÖ  
DateTime
ÖÖ! )
.
ÖÖ) *
UtcNow
ÖÖ* 0
;
ÖÖ0 1
_repository
àà 
.
àà 
Update
àà 
(
àà 
existing
àà #
)
àà# $
;
àà$ %
await
ââ 
_repository
ââ 
.
ââ 
SaveChangesAsync
ââ *
(
ââ* +
)
ââ+ ,
;
ââ, -
return
ãã 
	NoContent
ãã 
(
ãã 
)
ãã 
;
ãã 
}
åå 
[
òò 

HttpDelete
òò 
(
òò 
$str
òò 
)
òò 
]
òò  
[
ôô "
ProducesResponseType
ôô 
(
ôô 
StatusCodes
ôô %
.
ôô% & 
Status204NoContent
ôô& 8
)
ôô8 9
]
ôô9 :
[
öö "
ProducesResponseType
öö 
(
öö 
StatusCodes
öö %
.
öö% &
Status404NotFound
öö& 7
)
öö7 8
]
öö8 9
public
õõ 

async
õõ 
Task
õõ 
<
õõ 
IActionResult
õõ #
>
õõ# $
Delete
õõ% +
(
õõ+ ,
string
õõ, 2

partNumber
õõ3 =
)
õõ= >
{
úú 
var
ùù 
part
ùù 
=
ùù 
await
ùù 
_repository
ùù $
.
ùù$ %
GetByIdAsync
ùù% 1
(
ùù1 2

partNumber
ùù2 <
)
ùù< =
;
ùù= >
if
ûû 

(
ûû 
part
ûû 
==
ûû 
null
ûû 
)
ûû 
{
üü 	
_logger
†† 
.
†† 

LogWarning
†† 
(
†† 
$str
†† =
,
††= >

partNumber
††? I
)
††I J
;
††J K
return
°° 
NotFound
°° 
(
°° 
)
°° 
;
°° 
}
¢¢ 	
_logger
§§ 
.
§§ 
LogInformation
§§ 
(
§§ 
$str
§§ <
,
§§< =

partNumber
§§> H
)
§§H I
;
§§I J
_repository
•• 
.
•• 
Remove
•• 
(
•• 
part
•• 
)
••  
;
••  !
await
¶¶ 
_repository
¶¶ 
.
¶¶ 
SaveChangesAsync
¶¶ *
(
¶¶* +
)
¶¶+ ,
;
¶¶, -
return
®® 
	NoContent
®® 
(
®® 
)
®® 
;
®® 
}
©© 
}™™ 